<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns="http://www.interactive-instruments.de/etf/2.0"
    targetNamespace="http://www.interactive-instruments.de/etf/2.0"
    elementFormDefault="qualified" version="1.0">
    
    <xs:annotation>
        <xs:documentation xml:lang="en"> ignoreRef.xsd. Created by Jon Herrmann, (c) 2017
            interactive instruments GmbH. This file is part of ETF which is licensed under the
            Apache License Version 2.0 </xs:documentation>
    </xs:annotation>
    
    <!-- =============================================================== -->
    <!-- ================== includes and imports ======================= -->
    <!-- =============================================================== -->
    <xs:include schemaLocation="../model/items.xsd"/>
    <xs:redefine schemaLocation="../basic/basicTypes.xsd">
        <!-- =============================================================== -->
        <xs:group name="MetaDataItemGroup">
            <xs:sequence>
                <xs:element ref="label" minOccurs="0"/>
                <xs:element ref="translatableLabel" minOccurs="0"/>
                <xs:element ref="description" minOccurs="0"/>
                <xs:element ref="translatableDescription" minOccurs="0"/>
                <xs:group ref="MetaDataItemGroup"/>
            </xs:sequence>
        </xs:group>
        
        <!-- =============================================================== -->
        <xs:complexType name="RefType">
            <xs:complexContent>
                <xs:extension base="RefType">
                    <xs:attribute name="ref" use="required">
                        <xs:annotation>
                            <xs:documentation>Reference are not checked in the ignoreRef XML Schema</xs:documentation>
                        </xs:annotation>
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:minLength value="6"/>
                                <xs:maxLength value="45"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
        
        <!-- =============================================================== -->
        <xs:group name="RepositoryItemGroup">
            <xs:sequence>
                <xs:element name="itemHash" type="xs:string" minOccurs="1">
                    <xs:annotation>
                        <xs:documentation>The item is updated by the ETF whenever an item is
                            modified and can be used to detect changes</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="remoteResource" type="httpUriType" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>The remote Http URI from where the item has been fetched
                            and will be synchonized by the ETF, e.g. a git URL</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="localPath" type="xs:anyURI" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Path to a synchronized local copy of the remote
                            data</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:group ref="RepositoryItemGroup"/>
            </xs:sequence>
        </xs:group>
        
    </xs:redefine>
    <!-- =============================================================== -->
    
    <!-- =============================================================== -->
    <xs:complexType name="egarefLoc">
        <xs:complexContent>
            <xs:extension base="RefType">
                <xs:attribute name="egaref" use="required">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:pattern
                                value="egaid\.([a-z][a-z1-9\-\.]*)\.([a-z][a-z1-9\-]*)(:([0-9]+\.[0-9]+\.[0-9]+(-SNAPSHOT)?|latest))?"
                            />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
</xs:schema>
